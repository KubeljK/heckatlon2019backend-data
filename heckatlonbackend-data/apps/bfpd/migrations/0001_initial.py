# Generated by Django 2.2.4 on 2019-08-16 01:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DerivationCodeDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('derivation_code', models.CharField(help_text='A code indicating how the Output Value was\n        determined. Links to the Nutrient file.', max_length=4)),
                ('derivation_code_description', models.CharField(help_text='Description of the derivation code', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Nutrients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ndb_no', models.IntegerField()),
                ('nutrient_code', models.IntegerField(help_text='Unique 3-digit identifier code for a nutrient')),
                ('nutrient_name', models.CharField(help_text='Name of nutrient/food component', max_length=255)),
                ('derivation_code', models.CharField(help_text='A code indicating how the Output_Value was\n        determined. The codes used are defined in the Derivation Code Description file', max_length=4, null=True)),
                ('output_value', models.DecimalField(decimal_places=2, help_text='Amount in 100 g, edible portion. This value is\n        calculated from the amount per serving value on\n        the Nutrition Facts Panel supplied by the data\n        provider', max_digits=10)),
                ('output_utom', models.CharField(help_text='Units of measure for the Output Value', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ndb_no', models.IntegerField(help_text='8-digit Nutrient Database Number (NDB) that\n        uniquely identifies a food item. Links to the\n        Nutrient file and the Serving Size file.')),
                ('long_name', models.CharField(help_text='200-character description of food item', max_length=255)),
                ('data_source', models.CharField(help_text='A code designating the source of the data:\n        GDSN = Global Data Synchronization Network via 1WorldSync\n        LI = Label Insight', max_length=255, null=True)),
                ('gtin_upc', models.CharField(help_text='A unique code identifying a specific product:', max_length=255, null=True)),
                ('manufacturer', models.CharField(help_text='The company that manufactured the product', max_length=255, null=True)),
                ('date_modified', models.DateField(help_text='Date when the food record was last updated by the data provider', null=True)),
                ('date_available', models.DateField(help_text='Date when the food record was made available for inclusion in the database', null=True)),
                ('ingredients', models.TextField(help_text='Ingredients of the product', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServingSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ndb_no', models.IntegerField()),
                ('serving_size', models.DecimalField(decimal_places=2, help_text='Weight of the specified serving', max_digits=10, null=True)),
                ('serving_size_uom', models.CharField(help_text='Unit of Measure for the serving size\n        g: Serving size reported in grams\n        m: Serving size reported in milliliters', max_length=2, null=True)),
                ('household_serving_size', models.DecimalField(decimal_places=2, help_text='The amount of the\n        Household_Serving_Size_UOM, i.e., the number\n        of cups, tablespoons, teaspoons in a serving.\n        May be a fraction, such as 0.25 or 0.50.', max_digits=10, null=True)),
                ('household_serving_size_uom', models.CharField(help_text='The Units of Measure for the Household Serving,\n        i.e., cup, tablespoon, teaspoon.', max_length=255, null=True)),
                ('preparation_state', models.CharField(help_text='Indicates if the information from the Nutrition\n        Facts Panel is for the prepared or unprepared\n        food. Only included if supplied.', max_length=255, null=True)),
            ],
        ),
    ]
